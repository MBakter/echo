@startuml
!theme reddress-darkblue
interface IActor{ 
+accept(TargyVisitor): void
+mozog(Szoba): Szoba
}
interface TargyVisitor
interface SzobaEventListener{
+update(eventType): void
}

abstract class Actor implements IActor, SzobaEventListener {
#targyak: Targy[]
#numOfItems: int
#jelenSzoba: Szoba
+felvesz(Targy): void
+lerak(Targy):void
}
class Hallgato implements Actor {
+hasznal(Targy): void 
}
class Oktato implements Actor {
}
class Szoba {
}

Actor::jelenSzoba "1" - "0..*" Szoba
IActor - TargyVisitor

note bottom of Hallgato
El tudja dönteni, hogy ha oktató is van, akkor sebződik-e -> Listener
Reagál a szoba állapotára -> Listener
Használhatja a tárgyait -> Visitor
end note
note left of Actor::update
Pl. Gázos a szoba vagy
Oktatóval találkozott egy hallgato?
end note
note right of Actor::targyak
Enum?
end note
note left of IActor::update
Ezzel reagál arra hogy pl. gázos a
szoba/lemegy a hp-d?
end note
note left of Hallgato::UseItem
Oktató nem tud tárgyakat használni a
specifikációnk szerint.
end note

@enduml